# -*- Makefile -*- 

#============== MACHINE ==============#
USE_HONGYI = HONGYI


#============== LIBRARIES SUPPORTED ============#
USE_DW = USE_DW
  #USE_DW_MATRIX_CPP = USE_DW_MATRIX_CPP
  USE_DW_MATRIX_VER2 = USE_DW_MATRIX_VER2
  USE_DW_MATRIX = USE_DW_MATRIX
  USE_DW_ERROR = USE_DW_ERROR
  USE_DW_ARRAY = USE_DW_ARRAY
  USE_DW_ASCII = USE_DW_ASCII
  USE_DW_ASCII_CPP = USE_DW_ASCII_CPP
  USE_DW_STAT = USE_DW_STAT
  USE_DW_SORT = USE_DW_SORT
  USE_DW_ELLIPTICAL = USE_DW_ELLIPTICAL
  USE_DW_HISTO = USE_DW_HISTO
  USE_DW_MATH = USE_DW_MATH
  USE_DW_SWITCH = USE_DW_SWITCH
  USE_DW_STATE_SPACE = USE_DW_STATE_SPACE
  
MPI_LIBS_DIR = /usr/lib/mpich-install/lib

#MKL_LIBS_DIR = /opt/intel-2013b/mkl/lib/intel64
MKL_LIBS_DIR = /opt/intel/mkl/lib/intel64
MKL_LIBS = -Wl,--start-group -lmkl_intel_lp64 -lmkl_sequential -lmkl_core -Wl,--end-group

GSL_LIBS_DIR = /usr/lib/x86_64-linux-gnu

NPSOL_LIBS_DIR = $(HOME)/npsol/Linux-x86_64/optimized/lib/ 
NPSOL_LIBS = -lnpsol_f77 -llssol_f77 -lgfortran

#============ BASE DIRECTORIES ============#
BASE_DIR = $(HOME)/Projects
DW_BASE_DIR = $(BASE_DIR)

CC = mpicc
CPP = mpic++
#CPP = mpicxx

CFLAGS = -DSTRUCTURED_COLUMN_MAJOR -Wall -O3
CCFLAGS = -DSTRUCTURED_COLUMN_MAJOR -Wall -O3


MAKEFILE_DIR = $(BASE_DIR)/projects_dw

include $(MAKEFILE_DIR)/make_machines_master
include $(MAKEFILE_DIR)/make_libraries_master

#============ PROJECT PATHS ================#
PROJECT_DIR = $(BASE_DIR)/projects_hf/dsmh-npsol_hf/src
EXE_DIR = $(BASE_DIR)/projects_hf/executable
BUILD_DIR = $(BASE_DIR)/projects_hf/build
DW_TIME_SERIES_DIR = $(DW_BASE_DIR)/projects_dw/time-series2
HF_STATESPACE_DIR = $(BASE_DIR)/projects_hf/StateSpace

LIBS_DIR := $(LIBS_DIR) -L$(MKL_LIBS_DIR) -L$(GSL_LIBS_DIR) -L$(MPI_LIBS_DIR) -L$(NPSOL_LIBS_DIR)
LIBS := $(LIBS) -lstdc++ -lpthread -DAE_CPU=AE_INTEL $(MKL_LIBS) $(NPSOL_LIBS) -lgsl -lmpich -lopa -lmpl -lrt

INCLUDE_DIR := $(INCLUDE_DIR) -I$(DW_TIME_SERIES_DIR) -I$(HF_STATESPACE_DIR) -I$(PROJECT_DIR)/include/dsmh_basic -I$(PROJECT_DIR)/include/dsmh_mpi -I$(PROJECT_DIR)/include/generic_new_model  -I/usr/include/gsl  -I/usr/lib/mpich-install/include
VPATH := $(VPATH) $(DW_TIME_SERIES_DIR) $(HF_STATESPACE_DIR) $(PROJECT_DIR)/dsmh_basic $(PROJECT_DIR)/dsmh_mpi $(PROJECT_DIR)/generic_new_model $(BUILD_DIR)
 

utilities_SOURCES =dw_array.o dw_ascii.o dw_ascii_v2.o dw_elliptical.o dw_math.o dw_matrix.o dw_matrix_rand.o dw_parse_cmd.o dw_rand_gsl.o bmatrix.o dw_error.o dw_matrix_sort.o DM.o DM_lapack.o

dsmh_basci_SOURCES = CEESParameter.o CEquiEnergyModel.o CEquiEnergyModel_Initialize.o CEquiEnergyModel_HillClimb.o CMetropolis.o CPutGetBin.o CSampleIDWeight.o CStorageHead.o Glob.o

dsmh_mpi_SOURCES = DispatchSimulation.o DispatchTuneSimulation.o EstimateLogMDD.o ExecutingSimulationTask.o GetCommunicationParameter.o HighestPlus1Stage.o HighestPlus1Stage_Prior.o master_deploying.o mdd_function.o slave_computing.o master_mode_finding_deploying.o slave_mode_finding_computing.o 

generic_model_SOURCES = CEquiEnergy_generic_model.o generic_model_TTimeSeries_StateSpace.o
#time_series_SOURCES = dw_data.o regime_processes.o CEquiEnergy_TimeSeries.o

statespace_simulation_SOURCES = TTimeSeries.o StateSpace.o specification_io.o TFunction.o TData.o $(utilities_SOURCES) $(dsmh_basci_SOURCES) $(dsmh_mpi_SOURCES) $(generic_model_SOURCES)


# PROJECT FILES
TEST_OBJS := $(statespace_simulation_SOURCES) generic_model_statespace_simulation.o

# OUTPUT
TEST_EFILE = $(EXE_DIR)/test_statespace_dsmh

###########################################################################

all : $(TEST_EFILE)

$(TEST_EFILE) : $(TEST_OBJS) 
	$(CPP) $(CFLAGS) $^ $(LIBS_DIR) $(LIBS) -o $(TEST_EFILE)

%.o : %.c
	$(CC) $(CFLAGS) $(INCLUDE_DIR) -c $< -o $(BUILD_DIR)/$@

%.o : %.cpp
	$(CPP) $(CCFLAGS) $(INCLUDE_DIR) -c $< -o $(BUILD_DIR)/$@

#################################################################################
clean:
	rm -f $(EXE_DIR)/*.o
	rm -f $(BUILD_DIR)/*.o
#
#################################################################################
test:
	echo "EXE_DIR: $(EXE_DIR)"
	echo "BUILD_DIR: $(BUILD_DIR)"
	echo "VPATH: $(VPATH)"
	echo "INCLUDE_DIR: $(INCLUDE_DIR)"
	echo "LIBS_DIR: $(LIBS_DIR)"
	echo "OBJS: $(OBJS)"
	echo "TEST_OBJS: $(TEST_OBJS)"
	echo "ENDO_OBJS: $(ENDO_OBJS)"
	echo "CC: $(CC)"
	echo "MKL_LIBS: $(MKL_LIBS)"
