# -*- Makefile -*- 
#============== LIBRARIES SUPPORTED ============#
USE_DW = USE_DW
  #USE_DW_MATRIX_CPP = USE_DW_MATRIX_CPP
  USE_DW_MATRIX_VER2 = USE_DW_MATRIX_VER2
  #USE_DW_MATRIX = USE_DW_MATRIX
  USE_DW_ERROR = USE_DW_ERROR
  USE_DW_ARRAY = USE_DW_ARRAY
  USE_DW_ASCII = USE_DW_ASCII
  USE_DW_ASCII_CPP = USE_DW_ASCII_CPP
  USE_DW_STAT = USE_DW_STAT
  USE_DW_SORT = USE_DW_SORT
  USE_DW_ELLIPTICAL = USE_DW_ELLIPTICAL
  USE_DW_HISTO = USE_DW_HISTO
  USE_DW_MATH = USE_DW_MATH
  
  
BASE_DIR = $(HOME)/Projects

CC = mpicc
CPP = mpic++
#CPP = mpicxx

MAKEFILE_DIR = $(BASE_DIR)/projects_dw

include $(MAKEFILE_DIR)/make_machines_master
include $(MAKEFILE_DIR)/make_libraries_master

MPI_LIBS_DIR = /usr/local/bin/mpich-install/lib

#MKL_LIBS_DIR = /opt/intel-2013b/mkl/lib/intel64
MKL_LIBS_DIR = /opt/intel/mkl/lib/intel64
MKL_LIBS = -Wl,--start-group -lmkl_intel_lp64 -lmkl_sequential -lmkl_core -Wl,--end-group

GSL_LIBS_DIR = /usr/lib/x86_64-linux-gnu

NPSOL_LIBS_DIR = $(HOME)/npsol/Linux-x86_64/optimized/lib/ 
NPSOL_LIBS = -lnpsol_f77 -llssol_f77 -lgfortran

################################################################################

CFLAGS = -DSTRUCTURED_COLUMN_MAJOR -Wall -O3
CCFLAGS = -DSTRUCTURED_COLUMN_MAJOR -Wall -O3

IRM_PROJECT_DIR = $(BASE_DIR)/projects_dw/time-series2

EXEC_DIR = exec
BUILD_DIR = $(EXEC_DIR)/build

LIBS_DIR := $(LIBS_DIR) -L$(MKL_LIBS_DIR) -L$(GSL_LIBS_DIR) -L$(MPI_LIBS_DIR) -L$(NPSOL_LIBS_DIR)
LIBS := $(LIBS) $(MKL_LIBS) $(NPSOL_LIBS) -lgsl -lmpich -lopa -lmpl -lrt
INCLUDE_DIR := $(INCLUDE_DIR) -Isrc/include/dsmh_basic -Isrc/include/dsmh_mpi -I$(BASE_DIR)/utilities_dw/include -I$(IRM_PROJECT_DIR) -Isrc/include/generic_new_model -I/usr/include/gsl -I/usr/local/bin/mpich-install/include
VPATH := $(VPATH) $(IRM_PROJECT_DIR) $(BUILD_DIR) src/dsmh_basic/ src/dsmh_mpi/ src/generic_new_model/

utilities_SOURCES =dw_array.o dw_ascii.o dw_ascii_v2.o DM.o dw_elliptical.o dw_math.o dw_matrix.o dw_matrix_rand.o dw_parse_cmd.o dw_rand_gsl.o bmatrix.o dw_error.o dw_matrix_sort.o DM_lapack.o 

dsmh_basci_SOURCES = CEESParameter.o CEquiEnergyModel.o CEquiEnergyModel_Initialize.o CEquiEnergyModel_HillClimb.o CMetropolis.o CPutGetBin.o CSampleIDWeight.o CStorageHead.o Glob.o

dsmh_mpi_SOURCES = DispatchSimulation.o DispatchTuneSimulation.o EstimateLogMDD.o ExecutingSimulationTask.o GetCommunicationParameter.o HighestPlus1Stage.o HighestPlus1Stage_Prior.o master_deploying.o mdd_function.o slave_computing.o  

generic_model_SOURCES = CEquiEnergy_generic_model.o generic_model_TTimeSeries_IRM.o
#time_series_SOURCES = dw_data.o regime_processes.o CEquiEnergy_TimeSeries.o

IRM_OBJS = $(utilities_SOURCES) TTimeSeries.o TData.o TFunction.o TDensity.o specification_io.o IRM.o sbvar.o $(dsmh_basci_SOURCES) $(dsmh_mpi_SOURCES) $(generic_model_SOURCES)

#sbvar_simulation_SOURCES = $(utilities_SOURCES) sbvar.o sbvar_blocks.o hyper_parameter.o $(dsmh_basci_SOURCES) $(dsmh_mpi_SOURCES) $(time_series_SOURCES)

#tvsbvar_simulation_SOURCES = sbvar.o sbvar_blocks.o hyper_parameter.o tvsbvar.o Sims_Zha.o Restriction.o tvsbvar_blocks.o $(utilities_SOURCES) $(dsmh_basci_SOURCES) $(dsmh_mpi_SOURCES) $(time_series_SOURCES)

#tvsbvar_optimization_SOURCES = sbvar.o sbvar_blocks.o hyper_parameter.o tvsbvar.o Sims_Zha.o Restriction.o tvsbvar_blocks.o tvsbvar_optimization.o $(utilities_SOURCES) $(dsmh_basci_SOURCES) $(dsmh_mpi_SOURCES) $(time_series_SOURCES)

#tvsbvar_convert_SOURCES = sbvar.o sbvar_blocks.o hyper_parameter.o tvsbvar.o Sims_Zha.o Restriction.o tvsbvar_blocks.o tvsbvar_convert.o $(utilities_SOURCES) $(dsmh_basci_SOURCES) $(dsmh_mpi_SOURCES) $(time_series_SOURCES)

#tvsbvar_simulate_exe = $(EXEC_DIR)/tvsbvar_simulate

#tvsbvar_maximize_exe = $(EXEC_DIR)/tvsbvar_maximize

#tvsbvar_convert_exe = $(EXEC_DIR)/tvsbvar_convert

#all : $(tvsbvar_simulate_exe) $(tvsbvar_maximize_exe) $(tvsbvar_convert_exe)

#simulate : $(tvsbvar_simulate_exe)

#maximize : $(tvsbvar_maximize_exe)

#convert : $(tvsbvar_convert_exe)

#$(tvsbvar_simulate_exe) : $(tvsbvar_simulation_SOURCES)
#	$(CPP) $(CCFLAGS) $^ $(LIBS_DIR) $(LIBS) -o $(tvsbvar_simulate_exe)

#$(tvsbvar_maximize_exe) : $(tvsbvar_optimization_SOURCES)
#	$(CPP) $(CCFLAGS) $^ $(LIBS_DIR) $(LIBS) -o $(tvsbvar_maximize_exe)

#$(tvsbvar_convert_exe) : $(tvsbvar_convert_SOURCES)
#	$(CPP) $(CCFLAGS) $^ $(LIBS_DIR) $(LIBS) -o $(tvsbvar_convert_exe)

#TEST_OBJS := $(sbvar_simulation_SOURCES) test_sbvar_simulation.o
IRM_OBJS := $(IRM_OBJS) test_IRM.o

# OUTPUT
TEST_EFILE = $(EXEC_DIR)/test_sbvar_dsmh
IRM_EFILE = $(EXEC_DIR)/test_IRM

#all : $(TEST_EFILE)

#$(TEST_EFILE) : $(TEST_OBJS)
#	$(CPP) $(CFLAGS) $^ $(LIBS_DIR) $(LIBS) -o $(TEST_EFILE) 

all : $(IRM_EFILE)

$(IRM_EFILE) : $(IRM_OBJS)
	$(CPP) $(CFLAGS) $^ $(LIBS_DIR) $(LIBS) -o $(IRM_EFILE)

%.o : %.c
	$(CC) $(CFLAGS) $(INCLUDE_DIR) -c $< -o $(BUILD_DIR)/$@

%.o : %.cpp
	$(CPP) $(CCFLAGS) $(INCLUDE_DIR) -c $< -o $(BUILD_DIR)/$@

#################################################################################
clean:
	rm -f $(EXEC_DIR)/*.o
	rm -f $(BUILD_DIR)/*.o
#
#################################################################################
test:
	echo "EXE_DIR: $(EXEC_DIR)"
	echo "BUILD_DIR: $(BUILD_DIR)"
	echo "VPATH: $(VPATH)"
	echo "INCLUDE_DIR: $(INCLUDE_DIR)"
	echo "LIBS_DIR: $(LIBS_DIR)"
	echo "OBJS: $(OBJS)"
	echo "TEST_OBJS: $(TEST_OBJS)"
	echo "ENDO_OBJS: $(ENDO_OBJS)"
	echo "CC: $(CC)"
	echo "MKL_LIBS: $(MKL_LIBS)"
