# -*- Makefile -*- 
# Generic makefile for IMSL, MKL, blas/lapack, and FORTRAN libraries
# Generic makefile Hongyi's CPP routines 
# Generic makefile for various machines

#============== MACHINE ==============#
#USE_HOME=USE_HOME
#USE_LAPTOP=USE_LAPTOP 
#USE_WORK_64=USE_WORK_64
#USE_WORK_32=USE_WORK_32
#USE_WULF=USE_WULF
USE_HONGYI = HONGYI

#============== LIBRARIES SUPPORTED ============#
#USE_TZ = USE_TZ
USE_DW = USE_DW
  USE_DW_MATRIX_CPP = USE_DW_MATRIX_CPP
  USE_DW_MATRIX_VER2 = USE_DW_MATRIX_VER2
  #USE_DW_MATRIX = USE_DW_MATRIX
  USE_DW_ERROR = USE_DW_ERROR
  USE_DW_ARRAY = USE_DW_ARRAY
  USE_DW_ASCII = USE_DW_ASCII
  USE_DW_ASCII_CPP = USE_DW_ASCII_CPP
  USE_DW_STAT = USE_DW_STAT
  #USE_DW_SORT = USE_DW_SORT
  #USE_DW_ELLIPTICAL = USE_DW_ELLIPTICAL
  #USE_DW_HISTO = USE_DW_HISTO
  USE_DW_MATH = USE_DW_MATH
  USE_DW_SWITCH = USE_DW_SWITCH
  USE_DW_STATE_SPACE = USE_DW_STATE_SPACE
USE_MKL = USE_MKL
#USE_ATLAS = USE_ATLAS
#USE_IMSL = USE_IMSL
#USE_LAPACK = USE_LAPACK
#USE_FORTRAN = USE_FORTRAN
USE_MATH = USE_MATH
USE_GSL = USE_GSL
#USE_GSL_CBLAS = USE_GSL_CBLAS
#USE_BOOST = USE_BOOST
#USE_MYSQL_CPP_CONN = USE_MYSQL_CPP_CONN
#USE_LOG4CXX = USE_LOG4CXX

#============ BASE DIRECTORIES ============#
BASE_DIR = $(HOME)/Projects
DW_BASE_DIR = $(BASE_DIR)

CC = gcc
CPP = g++
CFLAGS = -g -Wall -Wno-parentheses
#CFLAGS = -static -DSTRUCTURED_COLUMN_MAJOR -Wall -Wno-parentheses -O3
#CFLAGS = -static -Wall -Wno-parentheses -O3
#CFLAGS = -g -static
#CFLAGS =  -DSTRUCTURED_COLUMN_MAJOR -Wall -Wno-parentheses
CCFLAGS = -g -std=c++0x -Wall -Wno-parentheses
#CCFLAGS = -std=c++0x -static -DSTRUCTURED_COLUMN_MAJOR -Wall -Wno-parentheses -O3


MAKEFILE_DIR = $(BASE_DIR)/projects_dw

include $(MAKEFILE_DIR)/make_machines_master
include $(MAKEFILE_DIR)/make_libraries_master

LIBS := $(LIBS) -lstdc++ -lpthread -DAE_CPU=AE_INTEL
NPSOL_LIB = $(HOME)/npsol/Linux-x86_64/optimized/lib
LIBS_DIR := $(LIBS_DIR) -L$(NPSOL_LIB)
#LIBS := $(LIBS) -lnpsol_f77 -llssol_f77 -lgfortran
#LIBS := $(LIBS) -lmpich -lopa -lmpl -lrt

#============ PROJECT PATHS ================#
PROJECT_DIR = $(BASE_DIR)/projects_hf/StateSpace
EXE_DIR = $(BASE_DIR)/projects_hf/executable
BUILD_DIR = $(BASE_DIR)/projects_hf/build
DW_TIME_SERIES_DIR = $(DW_BASE_DIR)/projects_dw/time-series2

#INCLUDE_DIR := $(INCLUDE_DIR) -I$(ALGLIB_DIR) -I$(CSMINWEL_DIR) -I$(PROJECT_DIR) 
#VPATH := $(VPATH) $(MATRIX_DIR) $(ALGLIB_DIR) $(CSMINWEL_DIR) $(PROJECT_DIR) $(EQUI_ENERGY_DIR) $(TASK_SCHEDULING_DIR) $(BUILD_DIR) $(SIMULATION_DIR) $(MDD_FUNCTION_DIR)

INCLUDE_DIR := $(INCLUDE_DIR) -I$(DW_TIME_SERIES_DIR) -I$(PROJECT_DIR)
VPATH := $(VPATH) $(DW_TIME_SERIES_DIR) $(PROJECT_DIR) $(BUILD_DIR)


# TEST #####################################################################
# DW FILE

#ENDO_OBJS = $(OBJS) TTimeSeries.o TData.o TFunction.o TDensity.o specification_io.o TRegimeProcesses.o tvsbvar.o
#TEST_OBJS = $(OBJS) TTimeSeries.o TData.o TFunction.o TDensity.o specification_io.o StateSpace.o
TEST_OBJS = $(OBJS) TTimeSeries.o StateSpace.o specification_io.o TFunction.o TData.o

# PROJECT FILES
TEST_OBJS := $(TEST_OBJS) test_statespace.o

# OUTPUT
TEST_EFILE = $(EXE_DIR)/test_statespace

#################################################################################
all : $(TEST_EFILE)

$(TEST_EFILE) : $(TEST_OBJS) 
	$(CPP) $(CFLAGS) $^ $(LIBS_DIR) $(LIBS) -o $(TEST_EFILE)

%.o : %.c
	$(CC) $(CFLAGS) $(INCLUDE_DIR) -c $< -o $(BUILD_DIR)/$@
StateSpace.o : StateSpace.hpp
%.o : %.cpp
	$(CPP) $(CCFLAGS) $(INCLUDE_DIR) -c $< -o $(BUILD_DIR)/$@



#################################################################################
clean:
	rm -f $(EXE_DIR)/*.o
	rm -f $(BUILD_DIR)/*.o
#
#################################################################################
test:
	echo "EXE_DIR: $(EXE_DIR)"
	echo "BUILD_DIR: $(BUILD_DIR)"
	echo "VPATH: $(VPATH)"
	echo "INCLUDE_DIR: $(INCLUDE_DIR)"
	echo "LIBS_DIR: $(LIBS_DIR)"
	echo "OBJS: $(OBJS)"
	echo "TEST_OBJS: $(TEST_OBJS)"
	echo "ENDO_OBJS: $(ENDO_OBJS)"
	echo "CC: $(CC)"
	echo "MKL_LIBS: $(MKL_LIBS)"
